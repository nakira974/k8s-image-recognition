@page "/"
@using System.Text.RegularExpressions
@using ImageAnalyzerV1.Services
@inject IIMageDescriptionService _descriptionService

<PageTitle>Index</PageTitle>


        <h1>Chat</h1>
        
        <div class="row">
            <div class="col-md-8">
                <div class="card mb-3">
                    <div class="card-header">
                        Chat history
                    </div>
                    <div class="card-body">
                        <ul>
                            @foreach (var message in messages)
                            {
                                <li>
                                    @if (message.IsAnImage)
                                    {
                                        <img src="@message.Text"  width="200" height="150"> 
                                    }
                                    else
                                    {
                                        <strong>@message.User:</strong> @message.Text
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <form class="row" @onsubmit="@SendMessage">
                    <div class="col-md-9">
                        <input type="text" class="form-control" placeholder="Enter message" @bind="newMessage" />
                        @if (showErrorMessage)
                        {
                            <div class="alert alert-danger mt-2" role="alert">
                                Invalid URL. Please enter a valid URL that contains .jpg, .pdf, .svg, or .png.
                            </div>
                        }
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary">Send</button>
                    </div>
                </form>
            </div>
        </div>


@code {
    private string newMessage = string.Empty;
    private List<string> users = new List<string>();
    private List<Message> messages = new List<Message>();
    private bool showErrorMessage;
    private bool contentSend;

    private class Message
    {
        public string User { get; set; }
        public string? Text { get; set; }
        public bool IsAnImage { get; set; }
    }

    private async Task SendMessage()
    {
        string pattern = @"\bhttp\S+(?:jpg|png|gif)\b";
        
        if (Regex.IsMatch(newMessage, pattern, RegexOptions.IgnoreCase))
        {
            showErrorMessage = false;
            messages.Add(new Message { User = "nakira974", Text = "Describe :", IsAnImage = false });
            messages.Add(new Message {User = "nakira974", Text = newMessage, IsAnImage = true});
            var description = await _descriptionService.GetImageDescription(newMessage);
            messages.Add(new Message {User = "descrivizio001", Text = "Sure! Let's do it...", IsAnImage = false});
            messages.Add(new Message {User = "descrivizio001", Text = description?.Prediction, IsAnImage = false});
            await OnAfterRenderAsync(false);
        }
        else
        {
            showErrorMessage = true;
            await OnAfterRenderAsync(false);
        }
    }
}